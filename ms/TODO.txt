BOTH:
- Are there any other published method to compare with except kmergenie?
- Write introduction

Kristoffer:
- Results:
	- Methods:
		- optimal_k
		- KmerGenie
		- velvet optimizor and velvet_advisor?
	- Data sets:
		- staph
		- rhodo
		- human (chr14)
		- plasmid

	- Assemblers:
		- Unitiger
		- Velvet
		- Minia

	- Evaluation
		- Similarity to unitiger (our tool only)
		- Runtime
		- Memory
		- NG50, E-size, Size, Errors
16 March ->
- rerun the last sampling that failed


Alex:
16 March ->
- ask Jouni about dependence between buffer size and RAM usage and add max RAM as input parameter
- keep track of how many nodes we sample and compare with the required sample size
- maybe not keep the reads into RAM when sampling
- Make Python wrapper print unitigs if --silent is not given


AGENDA:
- Automatically choose highest kmer size (readlength - 10). For practical and time efficiency reasons.
- Stop at some value of k
- Derive an sample size estimate for E-size
- [DONE: but we need to cover corner cases, like p~0 or p~1] Implement sample size estimate for number of nodes, number of unitigs
- Discuss how E-size is estimated

PAPER:
- improve discussion on sampling algorithms
- explain the idea behind getting all abundances at the same time
- FIX notation for nb of unitigs and avg unitig length (when summing over start nodes)
- See how the formulas hold for reverse complements
